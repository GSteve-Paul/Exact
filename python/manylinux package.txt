*** FIRST UPDATE pyproject.toml WITH NEW VERSION NUMBER
*** AND COMPLETE THE CHANGE LOG
*** MAKE SURE THAT THE HEADERS HAVE BEEN COPIED
*** AND MAKE SURE EVERYTHING IS ON THE REMOTE REPOSITORY


0) get the manylinux docker image and run it
$ docker pull quay.io/pypa/manylinux_2_28_x86_64
$ docker run -it quay.io/pypa/manylinux_2_28_x86_64 bash


1) get Exact to compile:
1.1) clone repo:
$ git clone https://gitlab.com/JoD/exact.git
1.2) install boost on AlmaLinux
$ dnf -y install boost-devel
1.3) install exact (optionally, after building SoPlex)
$ cd exact/python
$ cmake .. -DCMAKE_BUILD_TYPE=Release -Dbuild_result=SharedLib -Dbuild_static=ON -Dsoplex=OFF
$ make -j 8
$ cp libExact.so exact/libExact.so


(in exact/python:)

2) create python wheel
2.1) alias python3 for easier use:
$ alias python3=/opt/python/cp38-cp38/bin/python3
2.2) install poetry and twine
$ python3 -m pip install poetry twine
2.3) create wheel
$ python3 -m poetry build --format=wheel
2.4) repair wheel
$ auditwheel repair dist/exact-1.1.1-py3-none-any.whl
2.5) install wheel locally to test:
$ python3 -m pip install wheelhouse/exact-1.1.1-py3-none-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl
$ python3 examples/knapsack_classic.py
2.6) upload wheel to PyPi
$ python3 -m twine upload wheelhouse/exact-1.1.1-py3-none-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl


*** COPY-PASTE version:

git clone https://gitlab.com/JoD/exact.git &&
dnf -y install boost-devel &&
cd exact/python &&
cmake .. -DCMAKE_BUILD_TYPE=Release -Dbuild_result=SharedLib -Dbuild_static=ON -Dsoplex=OFF &&
make -j 8 &&
cp libExact.so exact/libExact.so &&
/opt/python/cp38-cp38/bin/python3 -m pip install poetry twine &&
/opt/python/cp38-cp38/bin/python3 -m poetry build --format=wheel &&
auditwheel repair dist/exact*.whl &&
/opt/python/cp38-cp38/bin/python3 -m pip install wheelhouse/exact*.whl &&
/opt/python/cp38-cp38/bin/python3 examples/knapsack_classic.py &&
/opt/python/cp38-cp38/bin/python3 -m twine upload wheelhouse/exact*.whl
